/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package textclassifier;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author sorantes
 */
public class View extends javax.swing.JFrame {

    /**
     * Creates new form view
     */
    public BagOfWords bagOfWords;
    public View() {
        initComponents();
        bagOfWords = new BagOfWords();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        ChooseFile = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Console = new javax.swing.JTextArea();
        filePaht = new javax.swing.JTextField();
        inputText = new javax.swing.JTextField();
        AddPhrase = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        VocabularyList = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Reset = new javax.swing.JButton();
        EstimateProbability = new javax.swing.JButton();
        InvertFormat = new javax.swing.JCheckBox();
        BoolSpeacialChars = new javax.swing.JCheckBox();
        BooleanIgnoreNumbers = new javax.swing.JCheckBox();
        export = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ChooseFile.setText("Choose File");
        ChooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooseFileActionPerformed(evt);
            }
        });

        Console.setColumns(20);
        Console.setRows(5);
        jScrollPane2.setViewportView(Console);

        filePaht.setEditable(false);
        filePaht.setText("fiie....");
        filePaht.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filePahtActionPerformed(evt);
            }
        });

        inputText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputTextActionPerformed(evt);
            }
        });
        inputText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputTextKeyPressed(evt);
            }
        });

        AddPhrase.setText("Add Phrase");
        AddPhrase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddPhraseActionPerformed(evt);
            }
        });

        VocabularyList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = {  };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, VocabularyList, org.jdesktop.beansbinding.ObjectProperty.create(), VocabularyList, org.jdesktop.beansbinding.BeanProperty.create("elements"));
        bindingGroup.addBinding(binding);

        jScrollPane3.setViewportView(VocabularyList);

        jLabel1.setText("Console:");

        jLabel2.setText("Input:");

        jLabel3.setText("Data:");

        Reset.setText("Reset");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        EstimateProbability.setText("Estimate Probability");
        EstimateProbability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EstimateProbabilityActionPerformed(evt);
            }
        });

        InvertFormat.setText("Invert format of the input<tag>|<word>");

        BoolSpeacialChars.setText("Ignore special characters");
        BoolSpeacialChars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoolSpeacialCharsActionPerformed(evt);
            }
        });

        BooleanIgnoreNumbers.setText("Ignore numbers");

        export.setText("Export Vocabulary");
        export.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(ChooseFile)
                .addGap(9, 9, 9)
                .addComponent(filePaht, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(BoolSpeacialChars)
                .addGap(7, 7, 7)
                .addComponent(BooleanIgnoreNumbers)
                .addGap(8, 8, 8)
                .addComponent(Reset))
            .addGroup(layout.createSequentialGroup()
                .addGap(530, 530, 530)
                .addComponent(InvertFormat))
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel2)
                .addGap(6, 6, 6)
                .addComponent(inputText, javax.swing.GroupLayout.PREFERRED_SIZE, 924, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(AddPhrase)
                .addGap(15, 15, 15)
                .addComponent(EstimateProbability)
                .addGap(464, 464, 464)
                .addComponent(export))
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(553, 553, 553)
                .addComponent(jLabel3))
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(ChooseFile))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(filePaht, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(BoolSpeacialChars))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(BooleanIgnoreNumbers))
                    .addComponent(Reset))
                .addGap(5, 5, 5)
                .addComponent(InvertFormat)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(inputText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddPhrase)
                    .addComponent(EstimateProbability)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(export)))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel1))
                    .addComponent(jLabel3))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 820, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 824, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void ChooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChooseFileActionPerformed

        File fileParse = null;
        JFrame parentFrame = new JFrame();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", ".txt", "txt",".frag", "frag", "text", "csv");
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(filter); 
        fileChooser.setDialogTitle("Specify a file");  
        fileChooser.addChoosableFileFilter(filter);
        int userSelection = fileChooser.showSaveDialog(parentFrame);
        
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            fileParse = fileChooser.getSelectedFile();
            filePaht.setText("File path: " + fileParse.getAbsolutePath());
            System.out.println("File path: " + fileParse.getAbsolutePath());
            try {
                //Load new file
                String logmessage = bagOfWords.setNewFile(fileParse, InvertFormat.isSelected(),BoolSpeacialChars.isSelected(),BooleanIgnoreNumbers.isSelected());
                Log(logmessage);
            } catch (IOException ex) {
                Logger.getLogger(View.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("[-] Unexpected error");
            }
            aupdateVocabularyList();
        }
        else{
            filePaht.setText("[!] Error, the file didn't load correctly");
            System.out.println("[!] Error, the file didn't load correctly");
        }
    }//GEN-LAST:event_ChooseFileActionPerformed

    private void filePahtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filePahtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filePahtActionPerformed

    private void AddPhraseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddPhraseActionPerformed
        // Load new words
       String logmessage  = bagOfWords.addPhrase(inputText.getText());
       Log(logmessage);
       //inputText.setText("");
       aupdateVocabularyList();
    }//GEN-LAST:event_AddPhraseActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        // TODO add your handling code here:
        bagOfWords = new BagOfWords();
        inputText.setText("");
        DefaultListModel<String> model = new DefaultListModel<>();
        VocabularyList.setModel(model);
        Console.setText("");//bad programming i know i know
        filePaht.setText("file path...");
    }//GEN-LAST:event_ResetActionPerformed

    private void EstimateProbabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EstimateProbabilityActionPerformed

        estimateProbs();
    }//GEN-LAST:event_EstimateProbabilityActionPerformed

    private void BoolSpeacialCharsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoolSpeacialCharsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BoolSpeacialCharsActionPerformed

    private void exportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.showSaveDialog(this);
        File f = fc.getSelectedFile();
        Log(bagOfWords.exportVocabulary(f));
    }//GEN-LAST:event_exportActionPerformed

    private void inputTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputTextKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==10)
            estimateProbs();
    }//GEN-LAST:event_inputTextKeyPressed

    private void inputTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputTextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new View().setVisible(true);
        });
    }
    //show tags
    public void aupdateVocabularyList(){
        DefaultListModel<String> model = new DefaultListModel<>();
        List<String> Voca = bagOfWords.getVocabularyPercentage();
        model.addElement("Vocabulary size: " +Voca.size());
        for (String word:Voca) {
            model.addElement(word);
        }
        model.addElement("---------------------------------");
        List<String> tags = bagOfWords.getTagPercentage();
        model.addElement("Tags count: " + tags.size());
        model.addElement("Probabilities given the provided vocabulary:");
        model.addElement("");
        for(String tag:tags){
            model.addElement(tag );
        }
        VocabularyList.setModel(model);
    }
    //dont show tags
    public void updateVocabularyList(){
        DefaultListModel<String> model = new DefaultListModel<>();
        Set<String> Voca = bagOfWords.getVocabularyList();
        model.addElement("Vocabulary size: " +Voca.size());
        for (String word:Voca) {
            model.addElement(word);
        }
        model.addElement("------------------");
        for(String tag:bagOfWords.TagsCount.keySet()){
            model.addElement(tag );//+ " count: "+bagOfWords.TagsCount.get(tag)+"/"+Voca.size());
        }
        VocabularyList.setModel(model);
    }
    //control log messages
    public void Log(String logmessage) {
        if(Console.getText().equals(""))
            Console.setText(logmessage);
        else
            Console.setText(Console.getText() + "\n\n" + logmessage);
    }
    //
    public void estimateProbs(){
        String logmessage = bagOfWords.estimateProbability(inputText.getText());
        logmessage +="\n" + bagOfWords.estimateProbabilityLaplace(inputText.getText());
        //logmessage +="\n" + bagOfWords.estimateProbabilityTFIDF(inputText.getText());
        Log(logmessage);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddPhrase;
    private javax.swing.JCheckBox BoolSpeacialChars;
    private javax.swing.JCheckBox BooleanIgnoreNumbers;
    private javax.swing.JButton ChooseFile;
    private javax.swing.JTextArea Console;
    private javax.swing.JButton EstimateProbability;
    private javax.swing.JCheckBox InvertFormat;
    private javax.swing.JButton Reset;
    private javax.swing.JList<String> VocabularyList;
    private javax.swing.JButton export;
    private javax.swing.JTextField filePaht;
    private javax.swing.JTextField inputText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
